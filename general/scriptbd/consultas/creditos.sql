# BUSCAR CLIENTES QUE TIENE MÁS DE UN CRÉDITO TOMADO
SELECT ID, POSTULANTES, POSTULANTES_NOMBRES FROM fid_creditos WHERE POSTULANTES IN 
(SELECT POSTULANTES FROM fid_creditos WHERE `ID_CADUCADO` =0 GROUP BY POSTULANTES HAVING COUNT(ID)>1 ) ORDER BY POSTULANTES ASC

# BUSCAR CREDITOS CON DESEMBOLSOS DUPLICADOS
SELECT ID_CREDITO, COUNT( ID ) AS TT FROM `fid_creditos_desembolsos`
GROUP BY ID_CREDITO, FECHA HAVING COUNT( ID ) >1

# BUSCAR BASURA
SELECT ID_CREDITO FROM `fid_creditos_desembolsos` cd
LEFT JOIN `fid_creditos` c ON (cd.ID_CREDITO=c.ID)
WHERE c.ID IS NULL

# BUSCAR CREDITOS SIN DATOS
SELECT * FROM fid_creditos c
LEFT JOIN fid_creditos_cuotas cc ON c.ID=cc.ID_CREDITO
WHERE cc.CUOTAS_RESTANTES IS NULL
GROUP BY c.ID

SELECT * FROM fid_creditos_cuotas cc
LEFT JOIN fid_creditos c ON c.ID=cc.ID_CREDITO
WHERE c.MONTO_CREDITO IS NULL
GROUP BY cc.ID_CREDITO

SELECT ID_CREDITO, COUNT(*) AS TT FROM fid_creditos_cuotas cc
GROUP BY ID_CREDITO
ORDER BY TT DESC

select c.ID, c.POSTULANTES_NOMBRES, cc.ID from fid_creditos c
LEFT JOIN fid_creditos_cuotas cc ON c.ID=cc.ID_CREDITO
GROUP BY c.ID
ORDER BY c.ID ASC, cc.CUOTAS_RESTANTES DESC
INTO OUTFILE 'C:\\xampp\\mysql\\bin\\creditos.txt'

# BUSCAR CAMBIOS DE TASAS SIN CREDITOS
SELECT * FROM fid_creditos_cambiotasas ct
LEFT JOIN fid_creditos c ON c.ID=ct.ID_CREDITO
WHERE c.POSTULANTES IS NULL
GROUP BY c.ID

# BUSCAR CREDITOS CADUCADOS ERRONEOS
select c.ID, c.POSTULANTES_NOMBRES, c.ID_CADUCADO, cc.ID, cc.POSTULANTES_NOMBRES from fid_creditos c
left join fid_creditos cc on c.ID_CADUCADO=cc.ID
WHERE c.ID_CADUCADO!=0 AND c.POSTULANTES_NOMBRES!=cc.POSTULANTES_NOMBRES


SELECT * FROM fiduciaria_20170614.fid_creditos cbk
LEFT JOIN fiduciaria.fid_creditos c ON cbk.ID=c.ID
WHERE c.ID IS NULL